{"ast":null,"code":"var _jsxFileName = \"/Users/gravitsingh/Desktop/eventApp/event-management-app/frontend/src/components/EventList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('/api/events'); // Adjust the API endpoint as needed\n        if (!response.ok) {\n          throw new Error('Failed to fetch events');\n        }\n        const data = await response.json();\n        setEvents(data);\n      } catch (err) {\n        if (err instanceof Error) setError(err.message);else setError('Failed to fetch events');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEvents();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: event.name || event.title\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(EventList, \"TlsuwTtpJOZ2tMfhB3uipTGA4lI=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","loading","setLoading","error","setError","fetchEvents","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","name","title","id","_c","$RefreshReg$"],"sources":["/Users/gravitsingh/Desktop/eventApp/event-management-app/frontend/src/components/EventList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst EventList: React.FC = () => {\n    const [events, setEvents] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchEvents = async () => {\n            try {\n                const response = await fetch('/api/events'); // Adjust the API endpoint as needed\n                if (!response.ok) {\n                    throw new Error('Failed to fetch events');\n                }\n                const data = await response.json();\n                setEvents(data);\n            } catch (err) {\n                if (err instanceof Error) setError(err.message);\n                else setError('Failed to fetch events');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchEvents();\n    }, []);\n\n    if (loading) {\n        return <div>Loading events...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h2>Event List</h2>\n            <ul>\n                {events.map(event => (\n                    <li key={event.id}>{event.name || event.title}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default EventList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAQ,EAAE,CAAC;EAC/C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC7C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,SAAS,CAACU,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACV,IAAIA,GAAG,YAAYH,KAAK,EAAEL,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC,CAAC,KAC3CT,QAAQ,CAAC,wBAAwB,CAAC;MAC3C,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAkB,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;EAEA,IAAIf,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAkB,QAAA,GAAK,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EAEA,oBACItB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAAkB,QAAA,EACKf,MAAM,CAACoB,GAAG,CAACC,KAAK,iBACbxB,OAAA;QAAAkB,QAAA,EAAoBM,KAAK,CAACC,IAAI,IAAID,KAAK,CAACE;MAAK,GAApCF,KAAK,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACpB,EAAA,CA3CID,SAAmB;AAAA2B,EAAA,GAAnB3B,SAAmB;AA6CzB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}