{"ast":null,"code":"var _jsxFileName = \"/Users/gravitsingh/Desktop/eventApp/event-management-app/frontend/src/pages/EventPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`/api/events/${eventId}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setEvent(data);\n      } catch (error) {\n        console.error('Error fetching event:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEvent();\n  }, [eventId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Event not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: event.title || event.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", event.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", event.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPage, \"G0cHBdtuQk3KONYCWf+HNxQYX24=\", false, function () {\n  return [useParams];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","EventPage","_s","eventId","event","setEvent","loading","setLoading","fetchEvent","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","name","description","date","location","_c","$RefreshReg$"],"sources":["/Users/gravitsingh/Desktop/eventApp/event-management-app/frontend/src/pages/EventPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst EventPage = () => {\n    const { eventId } = useParams();\n    const [event, setEvent] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchEvent = async () => {\n            try {\n                const response = await fetch(`/api/events/${eventId}`);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setEvent(data);\n            } catch (error) {\n                console.error('Error fetching event:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchEvent();\n    }, [eventId]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!event) {\n        return <div>Event not found.</div>;\n    }\n\n    return (\n        <div>\n            <h1>{event.title || event.name}</h1>\n            <p>{event.description}</p>\n            <p>Date: {event.date}</p>\n            <p>Location: {event.location}</p>\n        </div>\n    );\n};\n\nexport default EventPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAM,IAAI,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAeP,OAAO,EAAE,CAAC;QACtD,IAAI,CAACM,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,QAAQ,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACNR,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAI,CAACjB,KAAK,EAAE;IACR,oBAAOJ,OAAA;MAAAiB,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACIrB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAKb,KAAK,CAACkB,KAAK,IAAIlB,KAAK,CAACmB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCrB,OAAA;MAAAiB,QAAA,EAAIb,KAAK,CAACoB;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MAAAiB,QAAA,GAAG,QAAM,EAACb,KAAK,CAACqB,IAAI;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAAiB,QAAA,GAAG,YAAU,EAACb,KAAK,CAACsB,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAACnB,EAAA,CAxCID,SAAS;EAAA,QACSH,SAAS;AAAA;AAAA6B,EAAA,GAD3B1B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}